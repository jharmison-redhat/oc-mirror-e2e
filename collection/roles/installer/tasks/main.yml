---
- name: Copy SSH keys
  copy:
    src: '{{ output_dir }}/{{ cluster_name }}_{{ item }}'
    dest: '{{ ansible_env["HOME"] }}/.ssh/'
    setype: ssh_home_t
    mode: '0400'
  loop:
  - ed25519
  - ed25519.pub

- name: Ensure aws credentials directory exists
  file:
    path: '{{ ansible_env["HOME"] }}/.aws'
    state: directory

- name: Template aws credentials
  template:
    src: credentials.j2
    dest: '{{ ansible_env["HOME"] }}/.aws/credentials'

- name: Recover credentials - just in case
  fetch:
    src: '{{ ansible_env["HOME"] }}/.aws/credentials'
    dest: '{{ output_dir }}/aws_credentials'
    flat: yes

- name: Recover iscp yaml
  slurp:
    src: '{{ remote_mirror_data_dir }}/imageContentSourcePolicy.yaml'
  register: icsps

- name: Save off icsp mirrors
  set_fact:
    icsp_mirrors: |-
      {% for icsp in icsps.content|b64decode|split('---') %}
      {% if icsp|from_yaml != None %}
      {{ (icsp|from_yaml).spec.repositoryDigestMirrors|to_yaml }}
      {%- endif %}
      {% endfor %}

- name: Ensure install directory exists
  file:
    path: '{{ install_directory }}'
    state: directory

- name: Template install-config-orig.yaml
  template:
    src: install-config.yaml.j2
    dest: '{{ install_directory|dirname }}/install-config-orig.yaml'

- name: Ensure OpenShift is installed
  import_tasks: installed.yml

- name: Ensure the pip download directory exists
  file:
    path: '{{ ansible_env["HOME"] }}/pip-haul'
    state: directory
  delegate_to: registry

- name: Download the necessary python packages
  command: python3.6 -m pip download kubernetes --dest "{{ ansible_env["HOME"] }}/pip-haul"
  register: pip_download
  changed_when: pip_download.stdout_lines|select("match", "^ Saved")|list|length > 0
  delegate_to: registry

- name: Identify python package files
  find:
    paths: '{{ ansible_env["HOME"] }}/pip-haul'
    file_type: file
  register: pip_files
  delegate_to: registry

- name: Ensure pip-haul directory is prepared on controller
  file:
    path: '{{ output_dir }}/pip-haul'
    state: directory
  delegate_to: controller

- name: Recover the python packages to the controller
  fetch:
    src: '{{ item.path }}'
    dest: '{{ output_dir }}/pip-haul/'
    flat: yes
  loop: '{{ pip_files.files }}'
  delegate_to: registry

- name: Copy the python packages for interacting with the cluster
  copy:
    src: '{{ output_dir }}/pip-haul'
    dest: '{{ ansible_env["HOME"] }}/'

- name: Install python packages for interacting with the cluster
  become: true
  pip:
    name: '{{ pip_files.files|map(attribute="path")|list }}'

- name: Ensure certificate is available for interacting with the clsuter
  copy:
    content: '{{ (lookup("file", output_dir + "/install/auth/kubeconfig")|from_yaml).clusters[0].cluster["certificate-authority-data"]|b64decode }}'
    dest: '{{ cluster_ca_path }}'
