---
- name: Ensure mirror data directory exists
  file:
    path: '{{ mirror_directory }}'
    state: directory

- name: Drop oc-mirror configuration
  template:
    src: imageset-config.yml.j2
    dest: '{{ ansible_env["HOME"] }}/imageset-config.yml'
  register: oc_mirror_config

- name: Ensure pull secret location exists
  file:
    path: '{{ ansible_env["HOME"] }}/.docker'
    state: directory

- name: Drop pull secret for oc-mirror
  copy:
    content: '{{ combined_pull_secret }}'
    dest: '{{ ansible_env["HOME"] }}/.docker/config.json'

# FIXME: Hacky workaround for https://github.com/openshift/oc-mirror/issues/273
- name: Ensure oc-mirror metadata image exists
  shell: |
    podman pull --authfile {{ auth_file }} {{ source_image }} &>/dev/null
    podman push --authfile {{ auth_file }} --remove-signatures {{ source_image }} {{ dest_image }} &>/dev/null
  loop: '{{ range(0,3)|list }}'
  vars:
    source_image: registry.redhat.io/ubi8/ubi:latest
    dest_image: '{{ oc_mirror_metadata_image.split(":", 2)[0] }}:fake'
    auth_file: '{{ ansible_env["HOME"] }}/.docker/config.json'
  when: registry_type == "redhat_quay"
  failed_when: false
  changed_when: false

- name: Mirror content into registry
  command: '{{ oc_mirror_binary_location }} --config {{ ansible_env["HOME"] }}/imageset-config.yml --dir={{ mirror_directory }} docker://{{ registry_hostname }}/{{ toplevel_namespace }}'
  when: oc_mirror_config.changed or force_mirror_update|bool

- name: Identify results directory
  find:
    paths: '{{ mirror_directory }}'
    file_type: directory
    patterns: "results-*"
  register: results

- name: Identify results ICSPs and CatalogSources
  find:
    paths: '{{ (results.files|last).path }}'
    file_type: file
    patterns: '*.yaml'
  register: sources

- name: Recover ICSPs and CatalogSources
  fetch:
    src: '{{ item.path }}'
    dest: '{{ mirror_data_recovery_dir }}/'
    flat: yes
    mode: '0644'
  loop: '{{ sources.files }}'
